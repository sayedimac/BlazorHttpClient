@page "/tnamed"

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button"
            role="tab" aria-controls="home" aria-selected="true">1. program.cs</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button"
            role="tab" aria-controls="profile" aria-selected="false">2. pages/Scoped.razor</button>
    </li>
</ul>
&nbsp;
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
       <pre>
        <code>
            builder.Services.AddHttpClient("<kbd>YOUR_NAMED_CLIENT</kbd>", <var>client </var> =>
                client.BaseAddress = new <var>Uri</var>(<kbd>[YOUR_BASE_URL]</kbd>));

        </code>
       </pre>
    </div>
    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
        <pre>
            <code>
                &#64;inject IHttpClientFactory <var>ClientFactory</var>
                ...
                <var>forecasts</var> = await Http.GetForecastAsync();
                var <var>Http</var> = ClientFactory.CreateClient("<kbd>YOUR_NAMED_CLIENT</kbd>");
                forecasts = await Http.GetFromJsonAsync&lt;WeatherForecast[]&gt;("api/getweather");
            </code>
        </pre>
    </div>
</div>




@code {
}
